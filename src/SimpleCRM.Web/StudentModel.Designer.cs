//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SimpleCRM.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WCFriadbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WCFriadbEntities object using the connection string found in the 'WCFriadbEntities' section of the application configuration file.
        /// </summary>
        public WCFriadbEntities() : base("name=WCFriadbEntities", "WCFriadbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WCFriadbEntities object.
        /// </summary>
        public WCFriadbEntities(string connectionString) : base(connectionString, "WCFriadbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WCFriadbEntities object.
        /// </summary>
        public WCFriadbEntities(EntityConnection connection) : base(connection, "WCFriadbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<student> students
        {
            get
            {
                if ((_students == null))
                {
                    _students = base.CreateObjectSet<student>("students");
                }
                return _students;
            }
        }
        private ObjectSet<student> _students;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostudents(student student)
        {
            base.AddObject("students", student);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCFriadbModel", Name="student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new student object.
        /// </summary>
        /// <param name="studentName">Initial value of the StudentName property.</param>
        /// <param name="studentAge">Initial value of the StudentAge property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static student Createstudent(global::System.String studentName, global::System.Int32 studentAge, global::System.Int32 id)
        {
            student student = new student();
            student.StudentName = studentName;
            student.StudentAge = studentAge;
            student.ID = id;
            return student;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, false, "StudentName");
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentAge
        {
            get
            {
                return _StudentAge;
            }
            set
            {
                OnStudentAgeChanging(value);
                ReportPropertyChanging("StudentAge");
                _StudentAge = StructuralObject.SetValidValue(value, "StudentAge");
                ReportPropertyChanged("StudentAge");
                OnStudentAgeChanged();
            }
        }
        private global::System.Int32 _StudentAge;
        partial void OnStudentAgeChanging(global::System.Int32 value);
        partial void OnStudentAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();

        #endregion

    }

    #endregion

}
